==494875== Memcheck, a memory error detector
==494875== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==494875== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==494875== Command: ./b
==494875==
==494875== Invalid read of size 1
==494875==    at 0x400B67: ??? (in /home/deleteme/b)
==494875==    by 0x400E62: ??? (in /home/deleteme/b)
==494875==    by 0x4010ED: ??? (in /home/deleteme/b)
==494875==    by 0x4009B9: ??? (in /home/deleteme/b)
==494875==    by 0x1FFF0002A7: ???
==494875==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==494875==
==494875==
==494875== Process terminating with default action of signal 11 (SIGSEGV)
==494875==  Access not within mapped region at address 0x0
==494875==    at 0x400B67: ??? (in /home/deleteme/b)
==494875==    by 0x400E62: ??? (in /home/deleteme/b)
==494875==    by 0x4010ED: ??? (in /home/deleteme/b)
==494875==    by 0x4009B9: ??? (in /home/deleteme/b)
==494875==    by 0x1FFF0002A7: ???
==494875==  If you believe this happened as a result of a stack
==494875==  overflow in your program's main thread (unlikely but
==494875==  possible), you can try to increase the size of the
==494875==  main thread stack using the --main-stacksize= flag.
==494875==  The main thread stack size used in this run was 8388608.
==494875==
==494875== HEAP SUMMARY:
==494875==     in use at exit: 0 bytes in 0 blocks
==494875==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==494875==
==494875== All heap blocks were freed -- no leaks are possible
==494875==
==494875== For lists of detected and suppressed errors, rerun with: -s
==494875== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
